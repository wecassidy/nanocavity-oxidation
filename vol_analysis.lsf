##############################################
# Modal volume
# This analysis script will calculate the modal volume of a confined
# mode. The user can choose between 3 simple calculation methods:
# 1) Volume = volume where E2 is greater than max(E2)/2
# 2) Volume = integral(esp*E2/max(eps*E2))
# 3) Volume = integral(H2)^2/integral(H4)
#
# Input properties
# calc type: calculation method to use 1,2, or 3
#
# Output properties
# V: mode volume vs frequency
#
##############################################

f=matrix(number_resonances,1);
V=matrix(number_resonances,1);

for(j=1:number_resonances){
    # get position vectors from monitor
    x=getdata("field_"+num2str(j),"x");
    y=getdata("field_"+num2str(j),"y");
    z=getdata("field_"+num2str(j),"z");
    f(j)=getdata("field_"+num2str(j),"f");

    #######################################################################
    # mode volume is defined as volume where E2 is greater than max(E2)/2
    if (calc_type==1) {
        E2=getelectric("field_"+num2str(j));
        sz = size(E2);

        mode=E2;
        for (i=1:sz(4)) {  # normalize each frequency
            mode(1:sz(1),1:sz(2),1:sz(3),i) = E2(1:sz(1),1:sz(2),1:sz(3),i) > max(E2(1:sz(1),1:sz(2),1:sz(3),i))/2;
        }
        V(j) = integrate2(mode,1:3,x,y,z);
    }

    #######################################################################
    # mode volume is defined as integral(esp*E2/max(eps*E2))
    if (calc_type==2) {
        E2=getelectric("field_"+num2str(j));
        n=getdata("index_"+num2str(j),"index_x");
        eps = real(n^2);  # use real part of esp
        sz = size(E2);

        mode = eps*E2;
        for (i=1:sz(4)) {  # normalize each frequency
            mode(1:sz(1),1:sz(2),1:sz(3),i) =     mode(1:sz(1),1:sz(2),1:sz(3),i) /
                                            max(mode(1:sz(1),1:sz(2),1:sz(3),i));
        }
        V(j) = integrate2(mode,1:3,x,y,z);
    }

    #######################################################################
    # calculate mode volume as integral(H2)^2/integral(H4)
    # this definition is used in MODE Solutions
    if (calc_type==3) {
        H2=getmagnetic("field_"+num2str(j));

        mode   = H2;
        V(i) = (integrate2(H2  ,1:3,x,y,z))^2 /
                    integrate2(H2^2,1:3,x,y,z);
    }

    #######################################################################

    print("Volume= "+num2str(V(j)*1e18)+" (um^3) at f= "+num2str(c/f(j)*1e6)+" um");
    print("-> Volume= "+num2str(V(j)/(c/f(j))^3)+" (lambda)^3");
    if (make_plots) {
        image(x*1e6,y*1e6,pinch(pinch(mode,4,1),3,find(z,0)),"x (um)","y (um)","mode");
        image(x*1e6,z*1e6,pinch(pinch(mode,4,1),2,find(y,0)),"x (um)","z (um)","mode");
    }
}

Volume = matrixdataset("Volume");
Volume.addparameter("lambda",c/f,"f",f);
Volume.addattribute("V",V);

if(make_plots){
    plot(c/f*1e6,V*1e18,"wavelength (um)","volume (um^3)");
}